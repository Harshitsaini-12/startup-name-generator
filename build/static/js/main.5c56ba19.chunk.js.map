{"version":3,"sources":["components/searchbox/searchbox.jsx","components/startup name/startupName.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","handleSearchSubmit","className","type","placeholder","autoFocus","onKeyPress","e","key","target","value","StartupName","data","name","require","App","searchField","setState","startupNames","state","this","map","startupName","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAIaA,EAAY,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,mBACvB,OACI,uBACIC,UAAU,SACVC,KAAK,SACLC,YAAY,sBACZC,WAAS,EACTC,WAAY,SAAAC,GACM,UAAVA,EAAEC,KACFP,EAAmBM,EAAEE,OAAOC,WCTnCC,G,MAAY,SAAC,GAAU,IAATC,EAAQ,EAARA,KACvB,OACI,qBAAKV,UAAU,cAAf,SACEU,MCDJC,G,MAAOC,EAAQ,KAuCNC,E,kDApCb,aAAe,IAAD,8BACZ,gBAQFd,mBAAqB,SAACe,GACpB,EAAKC,SAAS,CAAEC,aAAcL,EAAKG,MAPnC,EAAKG,MAAQ,CACXD,aAAc,IAJJ,E,0CAcd,WACE,OACE,sBAAKhB,UAAU,MAAf,UACE,wDACA,cAAC,EAAD,CACED,mBAAoBmB,KAAKnB,qBAE3B,qBAAKC,UAAU,0BAAf,SAEIkB,KAAKD,MAAMD,aAAaG,KAAI,SAAAC,GAC1B,OAAO,cAAC,EAAD,CACNV,KAAMU,GACDA,e,GA3BFC,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.5c56ba19.chunk.js","sourcesContent":["import React from 'react';\nimport './searchbox.css';\n\n\nexport const SearchBox = ({handleSearchSubmit}) => {\n    return (\n        <input\n            className='search'\n            type='search'\n            placeholder='Search Startup Name'\n            autoFocus\n            onKeyPress={e => {\n                if (e.key === 'Enter') {\n                    handleSearchSubmit(e.target.value);\n                }\n            }}\n        />\n\n    )\n}","import React from 'react';\n\nimport './startupName.css';\n\nexport const StartupName=({data})=>{\n    return(\n        <div className=\"result-card\">\n         {data}\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport { SearchBox } from './searchbox/searchbox';\nimport { StartupName } from './startup name/startupName';\nimport './App.css';\n\n\nconst name = require('@rstacruz/startup-name-generator')\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      startupNames: [],\n    }\n  }\n\n\n  handleSearchSubmit = (searchField) => {\n    this.setState({ startupNames: name(searchField) });\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Startup Name Generator</h1>\n        <SearchBox\n          handleSearchSubmit={this.handleSearchSubmit}\n        />\n        <div className=\"startup-names-container\">\n          {\n            this.state.startupNames.map(startupName => {\n              return <StartupName \n               data={startupName}\n               key={startupName}\n              />\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}